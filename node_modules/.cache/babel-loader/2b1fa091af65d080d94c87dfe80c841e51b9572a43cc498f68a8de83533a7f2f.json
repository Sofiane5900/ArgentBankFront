{"ast":null,"code":"import { SIGN_OUT } from '../authActionsTypes';\n\n// reducers/authReducer.js\nconst initialState = {\n  token: localStorage.getItem('token') || null,\n  error: null,\n  user: {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    userName: ''\n  }\n};\nconst authReducer = (state = initialState, action) => {\n  // Ici, je crée un reducer authReducer qui prend en paramètre l'état initial et une action\n  switch (action.type) {\n    // Je crée un switch pour gérer les différentes actions\n    case 'LOGIN_SUCCESS':\n      // Si l'action est LOGIN_SUCCESS \n      return {\n        ...state,\n        token: action.payload,\n        error: null\n      };\n    // Je retourne une state avec le token et l'erreur à null \n    case 'LOGIN_FAILURE':\n      // Si l'action est LOGIN_FAILURE\n      return {\n        ...state,\n        token: null,\n        error: action.payload\n      };\n    // Je retourne une state t avec le token à null et l'erreur à action.payload\n    case 'UPDATE_USERNAME':\n      // Si l'action est UPDATE_USERNAME\n      console.log(\"New username:\", action.payload); // Je console.log le nouveau nom d'utilisateur\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          userName: action.payload\n        }\n      };\n    // Je retourne une state avec le nouveau nom d'utilisateur\n    case SIGN_OUT:\n      return {\n        ...state,\n        token: null,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nexport default authReducer;","map":{"version":3,"names":["SIGN_OUT","initialState","token","localStorage","getItem","error","user","email","password","firstName","lastName","userName","authReducer","state","action","type","payload","console","log"],"sources":["C:/Users/zey/Desktop/Coding OC/ArgentBank-website-main/projet/src/components/Redux/reducers/authReducer.js"],"sourcesContent":["import { SIGN_OUT } from '../authActionsTypes';\r\n\r\n// reducers/authReducer.js\r\nconst initialState = {\r\n  token: localStorage.getItem('token') || null,\r\n  error: null,\r\n  user: {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    userName: '',\r\n  },\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => { // Ici, je crée un reducer authReducer qui prend en paramètre l'état initial et une action\r\n  switch (action.type) { // Je crée un switch pour gérer les différentes actions\r\n    case 'LOGIN_SUCCESS': // Si l'action est LOGIN_SUCCESS \r\n      return { ...state, token: action.payload, error: null }; // Je retourne une state avec le token et l'erreur à null \r\n    case 'LOGIN_FAILURE': // Si l'action est LOGIN_FAILURE\r\n      return { ...state, token: null, error: action.payload }; // Je retourne une state t avec le token à null et l'erreur à action.payload\r\n    case 'UPDATE_USERNAME': // Si l'action est UPDATE_USERNAME\r\n      console.log(\"New username:\", action.payload); // Je console.log le nouveau nom d'utilisateur\r\n      return { ...state, user: { ...state.user, userName: action.payload } }; // Je retourne une state avec le nouveau nom d'utilisateur\r\n    case SIGN_OUT:\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        error: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport default authReducer;\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,qBAAqB;;AAE9C;AACA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI;EAC5CC,KAAK,EAAE,IAAI;EACXC,IAAI,EAAE;IACJC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACZ;AACF,CAAC;AAGD,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGZ,YAAY,EAAEa,MAAM,KAAK;EAAE;EACtD,QAAQA,MAAM,CAACC,IAAI;IAAI;IACrB,KAAK,eAAe;MAAE;MACpB,OAAO;QAAE,GAAGF,KAAK;QAAEX,KAAK,EAAEY,MAAM,CAACE,OAAO;QAAEX,KAAK,EAAE;MAAK,CAAC;IAAE;IAC3D,KAAK,eAAe;MAAE;MACpB,OAAO;QAAE,GAAGQ,KAAK;QAAEX,KAAK,EAAE,IAAI;QAAEG,KAAK,EAAES,MAAM,CAACE;MAAQ,CAAC;IAAE;IAC3D,KAAK,iBAAiB;MAAE;MACtBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,MAAM,CAACE,OAAO,CAAC,CAAC,CAAC;MAC9C,OAAO;QAAE,GAAGH,KAAK;QAAEP,IAAI,EAAE;UAAE,GAAGO,KAAK,CAACP,IAAI;UAAEK,QAAQ,EAAEG,MAAM,CAACE;QAAQ;MAAE,CAAC;IAAE;IAC1E,KAAKhB,QAAQ;MACX,OAAO;QACL,GAAGa,KAAK;QACRX,KAAK,EAAE,IAAI;QACXG,KAAK,EAAE;MACT,CAAC;IACH;MACE,OAAOQ,KAAK;EAChB;AACF,CAAC;AAGD,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}